-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from ParMocha.y
-----------------------------------------------------------------------------

state 112 contains 1 shift/reduce conflicts.

rule 36 is unused
rule 37 is unused
rule 38 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListFunc                                (4)
	Func -> Type Ident '(' ListArg ')' Block           (5)
	ListFunc -> Func                                   (6)
	ListFunc -> Func ListFunc                          (7)
	Arg -> Type Ident                                  (8)
	ListArg ->                                         (9)
	ListArg -> Arg                                     (10)
	ListArg -> Arg ',' ListArg                         (11)
	Block -> '{' ListStmt '}'                          (12)
	ListStmt ->                                        (13)
	ListStmt -> ListStmt Stmt                          (14)
	Stmt -> ';'                                        (15)
	Stmt -> Block                                      (16)
	Stmt -> Type ListItem ';'                          (17)
	Stmt -> Type Ident '(' ListArg ')' Block           (18)
	Stmt -> Ident '=' Expr ';'                         (19)
	Stmt -> 'return' Expr ';'                          (20)
	Stmt -> 'return' ';'                               (21)
	Stmt -> 'if' '(' Expr ')' Stmt                     (22)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (23)
	Stmt -> 'while' '(' Expr ')' Stmt                  (24)
	Stmt -> 'for' Ident '=' Expr 'to' Expr 'do' Stmt   (25)
	Stmt -> 'for' Ident '=' Expr 'downto' Expr 'do' Stmt   (26)
	Stmt -> Expr ';'                                   (27)
	Item -> Ident                                      (28)
	Item -> Ident '=' Expr                             (29)
	ListItem -> Item                                   (30)
	ListItem -> Item ',' ListItem                      (31)
	Type -> 'int'                                      (32)
	Type -> 'string'                                   (33)
	Type -> 'boolean'                                  (34)
	Type -> 'void'                                     (35)
	ListType ->                                        (36)
	ListType -> Type                                   (37)
	ListType -> Type ',' ListType                      (38)
	Expr6 -> Ident                                     (39)
	Expr6 -> Integer                                   (40)
	Expr6 -> 'true'                                    (41)
	Expr6 -> 'false'                                   (42)
	Expr6 -> Ident '(' ListExpr ')'                    (43)
	Expr6 -> String                                    (44)
	Expr6 -> '(' Expr ')'                              (45)
	Expr5 -> '-' Expr6                                 (46)
	Expr5 -> '!' Expr6                                 (47)
	Expr5 -> Expr6                                     (48)
	Expr4 -> Expr4 MulOp Expr5                         (49)
	Expr4 -> Expr5                                     (50)
	Expr3 -> Expr3 AddOp Expr4                         (51)
	Expr3 -> Expr4                                     (52)
	Expr2 -> Expr2 RelOp Expr3                         (53)
	Expr2 -> Expr3                                     (54)
	Expr1 -> Expr2 '&&' Expr1                          (55)
	Expr1 -> Expr2                                     (56)
	Expr -> Expr1 '||' Expr                            (57)
	Expr -> Expr1                                      (58)
	ListExpr ->                                        (59)
	ListExpr -> Expr                                   (60)
	ListExpr -> Expr ',' ListExpr                      (61)
	AddOp -> '+'                                       (62)
	AddOp -> '-'                                       (63)
	MulOp -> '*'                                       (64)
	MulOp -> '/'                                       (65)
	MulOp -> '%'                                       (66)
	RelOp -> '<'                                       (67)
	RelOp -> '<='                                      (68)
	RelOp -> '>'                                       (69)
	RelOp -> '>='                                      (70)
	RelOp -> '=='                                      (71)
	RelOp -> '!='                                      (72)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	','            { PT _ (TS _ 9) }
	'-'            { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'=='           { PT _ (TS _ 16) }
	'>'            { PT _ (TS _ 17) }
	'>='           { PT _ (TS _ 18) }
	'boolean'      { PT _ (TS _ 19) }
	'do'           { PT _ (TS _ 20) }
	'downto'       { PT _ (TS _ 21) }
	'else'         { PT _ (TS _ 22) }
	'false'        { PT _ (TS _ 23) }
	'for'          { PT _ (TS _ 24) }
	'if'           { PT _ (TS _ 25) }
	'int'          { PT _ (TS _ 26) }
	'return'       { PT _ (TS _ 27) }
	'string'       { PT _ (TS _ 28) }
	'to'           { PT _ (TS _ 29) }
	'true'         { PT _ (TS _ 30) }
	'void'         { PT _ (TS _ 31) }
	'while'        { PT _ (TS _ 32) }
	'{'            { PT _ (TS _ 33) }
	'||'           { PT _ (TS _ 34) }
	'}'            { PT _ (TS _ 35) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Func            rule  5
	ListFunc        rules 6, 7
	Arg             rule  8
	ListArg         rules 9, 10, 11
	Block           rule  12
	ListStmt        rules 13, 14
	Stmt            rules 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
	Item            rules 28, 29
	ListItem        rules 30, 31
	Type            rules 32, 33, 34, 35
	ListType        rules 36, 37, 38
	Expr6           rules 39, 40, 41, 42, 43, 44, 45
	Expr5           rules 46, 47, 48
	Expr4           rules 49, 50
	Expr3           rules 51, 52
	Expr2           rules 53, 54
	Expr1           rules 55, 56
	Expr            rules 57, 58
	ListExpr        rules 59, 60, 61
	AddOp           rules 62, 63
	MulOp           rules 64, 65, 66
	RelOp           rules 67, 68, 69, 70, 71, 72

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Program        goto state 3
	Func           goto state 4
	ListFunc       goto state 5
	Type           goto state 6

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'do'           reduce using rule 1
	'downto'       reduce using rule 1
	'to'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListFunc -> Func .                                  (rule 6)
	ListFunc -> Func . ListFunc                         (rule 7)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 6

	Func           goto state 4
	ListFunc       goto state 12
	Type           goto state 6

State 5

	Program -> ListFunc .                               (rule 4)

	%eof           reduce using rule 4


State 6

	Func -> Type . Ident '(' ListArg ')' Block          (rule 5)

	L_ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'boolean' .                                 (rule 34)

	L_ident        reduce using rule 34


State 8

	Type -> 'int' .                                     (rule 32)

	L_ident        reduce using rule 32


State 9

	Type -> 'string' .                                  (rule 33)

	L_ident        reduce using rule 33


State 10

	Type -> 'void' .                                    (rule 35)

	L_ident        reduce using rule 35


State 11

	Func -> Type Ident . '(' ListArg ')' Block          (rule 5)

	'('            shift, and enter state 13


State 12

	ListFunc -> Func ListFunc .                         (rule 7)

	%eof           reduce using rule 7


State 13

	Func -> Type Ident '(' . ListArg ')' Block          (rule 5)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 15
	Type           goto state 16

State 14

	ListArg -> Arg .                                    (rule 10)
	ListArg -> Arg . ',' ListArg                        (rule 11)

	')'            reduce using rule 10
	','            shift, and enter state 19


State 15

	Func -> Type Ident '(' ListArg . ')' Block          (rule 5)

	')'            shift, and enter state 18


State 16

	Arg -> Type . Ident                                 (rule 8)

	L_ident        shift, and enter state 2

	Ident          goto state 17

State 17

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 18

	Func -> Type Ident '(' ListArg ')' . Block          (rule 5)

	'{'            shift, and enter state 22

	Block          goto state 21

State 19

	ListArg -> Arg ',' . ListArg                        (rule 11)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 20
	Type           goto state 16

State 20

	ListArg -> Arg ',' ListArg .                        (rule 11)

	')'            reduce using rule 11


State 21

	Func -> Type Ident '(' ListArg ')' Block .          (rule 5)

	'boolean'      reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	%eof           reduce using rule 5


State 22

	Block -> '{' . ListStmt '}'                         (rule 12)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'boolean'      reduce using rule 13
	'false'        reduce using rule 13
	'for'          reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13

	ListStmt       goto state 23

State 23

	Block -> '{' ListStmt . '}'                         (rule 12)
	ListStmt -> ListStmt . Stmt                         (rule 14)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	';'            shift, and enter state 40
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 41
	'for'          shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 8
	'return'       shift, and enter state 44
	'string'       shift, and enter state 9
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	'}'            shift, and enter state 47
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Block          goto state 27
	Stmt           goto state 28
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36

State 24

	Stmt -> Ident . '=' Expr ';'                        (rule 19)
	Expr6 -> Ident .                                    (rule 39)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 43)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            shift, and enter state 79
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            shift, and enter state 80
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 25

	Expr6 -> Integer .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'do'           reduce using rule 40
	'downto'       reduce using rule 40
	'to'           reduce using rule 40
	'||'           reduce using rule 40


State 26

	Expr6 -> String .                                   (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'do'           reduce using rule 44
	'downto'       reduce using rule 44
	'to'           reduce using rule 44
	'||'           reduce using rule 44


State 27

	Stmt -> Block .                                     (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 28

	ListStmt -> ListStmt Stmt .                         (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'boolean'      reduce using rule 14
	'false'        reduce using rule 14
	'for'          reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'void'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14


State 29

	Stmt -> Type . ListItem ';'                         (rule 17)
	Stmt -> Type . Ident '(' ListArg ')' Block          (rule 18)

	L_ident        shift, and enter state 2

	Ident          goto state 76
	Item           goto state 77
	ListItem       goto state 78

State 30

	Expr5 -> Expr6 .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'do'           reduce using rule 48
	'downto'       reduce using rule 48
	'to'           reduce using rule 48
	'||'           reduce using rule 48


State 31

	Expr4 -> Expr5 .                                    (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'do'           reduce using rule 50
	'downto'       reduce using rule 50
	'to'           reduce using rule 50
	'||'           reduce using rule 50


State 32

	Expr4 -> Expr4 . MulOp Expr5                        (rule 49)
	Expr3 -> Expr4 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            shift, and enter state 73
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 74
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            shift, and enter state 75
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'do'           reduce using rule 52
	'downto'       reduce using rule 52
	'to'           reduce using rule 52
	'||'           reduce using rule 52

	MulOp          goto state 72

State 33

	Expr3 -> Expr3 . AddOp Expr4                        (rule 51)
	Expr2 -> Expr3 .                                    (rule 54)

	'!='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'+'            shift, and enter state 70
	','            reduce using rule 54
	'-'            shift, and enter state 71
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'do'           reduce using rule 54
	'downto'       reduce using rule 54
	'to'           reduce using rule 54
	'||'           reduce using rule 54

	AddOp          goto state 69

State 34

	Expr2 -> Expr2 . RelOp Expr3                        (rule 53)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 55)
	Expr1 -> Expr2 .                                    (rule 56)

	'!='           shift, and enter state 62
	'&&'           shift, and enter state 63
	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'<'            shift, and enter state 64
	'<='           shift, and enter state 65
	'=='           shift, and enter state 66
	'>'            shift, and enter state 67
	'>='           shift, and enter state 68
	'do'           reduce using rule 56
	'downto'       reduce using rule 56
	'to'           reduce using rule 56
	'||'           reduce using rule 56

	RelOp          goto state 61

State 35

	Expr -> Expr1 . '||' Expr                           (rule 57)
	Expr -> Expr1 .                                     (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	'do'           reduce using rule 58
	'downto'       reduce using rule 58
	'to'           reduce using rule 58
	'||'           shift, and enter state 60


State 36

	Stmt -> Expr . ';'                                  (rule 27)

	';'            shift, and enter state 59


State 37

	Expr5 -> '!' . Expr6                                (rule 47)

	'('            shift, and enter state 38
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 58

State 38

	Expr6 -> '(' . Expr ')'                             (rule 45)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 57

State 39

	Expr5 -> '-' . Expr6                                (rule 46)

	'('            shift, and enter state 38
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 56

State 40

	Stmt -> ';' .                                       (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'boolean'      reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15


State 41

	Expr6 -> 'false' .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'do'           reduce using rule 42
	'downto'       reduce using rule 42
	'to'           reduce using rule 42
	'||'           reduce using rule 42


State 42

	Stmt -> 'for' . Ident '=' Expr 'to' Expr 'do' Stmt    (rule 25)
	Stmt -> 'for' . Ident '=' Expr 'downto' Expr 'do' Stmt    (rule 26)

	L_ident        shift, and enter state 2

	Ident          goto state 55

State 43

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 22)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 23)

	'('            shift, and enter state 54


State 44

	Stmt -> 'return' . Expr ';'                         (rule 20)
	Stmt -> 'return' . ';'                              (rule 21)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	';'            shift, and enter state 53
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 52

State 45

	Expr6 -> 'true' .                                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'do'           reduce using rule 41
	'downto'       reduce using rule 41
	'to'           reduce using rule 41
	'||'           reduce using rule 41


State 46

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 24)

	'('            shift, and enter state 50


State 47

	Block -> '{' ListStmt '}' .                         (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'boolean'      reduce using rule 12
	'else'         reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'true'         reduce using rule 12
	'void'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 48

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'do'           reduce using rule 2
	'downto'       reduce using rule 2
	'to'           reduce using rule 2
	'||'           reduce using rule 2


State 49

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'do'           reduce using rule 3
	'downto'       reduce using rule 3
	'to'           reduce using rule 3
	'||'           reduce using rule 3


State 50

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 24)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 97

State 51

	Expr6 -> Ident .                                    (rule 39)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 43)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            shift, and enter state 79
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'do'           reduce using rule 39
	'downto'       reduce using rule 39
	'to'           reduce using rule 39
	'||'           reduce using rule 39


State 52

	Stmt -> 'return' Expr . ';'                         (rule 20)

	';'            shift, and enter state 96


State 53

	Stmt -> 'return' ';' .                              (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 54

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 22)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 23)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 95

State 55

	Stmt -> 'for' Ident . '=' Expr 'to' Expr 'do' Stmt    (rule 25)
	Stmt -> 'for' Ident . '=' Expr 'downto' Expr 'do' Stmt    (rule 26)

	'='            shift, and enter state 94


State 56

	Expr5 -> '-' Expr6 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'do'           reduce using rule 46
	'downto'       reduce using rule 46
	'to'           reduce using rule 46
	'||'           reduce using rule 46


State 57

	Expr6 -> '(' Expr . ')'                             (rule 45)

	')'            shift, and enter state 93


State 58

	Expr5 -> '!' Expr6 .                                (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'do'           reduce using rule 47
	'downto'       reduce using rule 47
	'to'           reduce using rule 47
	'||'           reduce using rule 47


State 59

	Stmt -> Expr ';' .                                  (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 60

	Expr -> Expr1 '||' . Expr                           (rule 57)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 92

State 61

	Expr2 -> Expr2 RelOp . Expr3                        (rule 53)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 91

State 62

	RelOp -> '!=' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 63

	Expr1 -> Expr2 '&&' . Expr1                         (rule 55)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 90

State 64

	RelOp -> '<' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 65

	RelOp -> '<=' .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 66

	RelOp -> '==' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 67

	RelOp -> '>' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 68

	RelOp -> '>=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 69

	Expr3 -> Expr3 AddOp . Expr4                        (rule 51)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 89

State 70

	AddOp -> '+' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 71

	AddOp -> '-' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 72

	Expr4 -> Expr4 MulOp . Expr5                        (rule 49)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 88

State 73

	MulOp -> '%' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 74

	MulOp -> '*' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 75

	MulOp -> '/' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 76

	Stmt -> Type Ident . '(' ListArg ')' Block          (rule 18)
	Item -> Ident .                                     (rule 28)
	Item -> Ident . '=' Expr                            (rule 29)

	'('            shift, and enter state 86
	','            reduce using rule 28
	';'            reduce using rule 28
	'='            shift, and enter state 87


State 77

	ListItem -> Item .                                  (rule 30)
	ListItem -> Item . ',' ListItem                     (rule 31)

	','            shift, and enter state 85
	';'            reduce using rule 30


State 78

	Stmt -> Type ListItem . ';'                         (rule 17)

	';'            shift, and enter state 84


State 79

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 43)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	')'            reduce using rule 59
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 82
	ListExpr       goto state 83

State 80

	Stmt -> Ident '=' . Expr ';'                        (rule 19)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 81

State 81

	Stmt -> Ident '=' Expr . ';'                        (rule 19)

	';'            shift, and enter state 107


State 82

	ListExpr -> Expr .                                  (rule 60)
	ListExpr -> Expr . ',' ListExpr                     (rule 61)

	')'            reduce using rule 60
	','            shift, and enter state 106


State 83

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 43)

	')'            shift, and enter state 105


State 84

	Stmt -> Type ListItem ';' .                         (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 85

	ListItem -> Item ',' . ListItem                     (rule 31)

	L_ident        shift, and enter state 2

	Ident          goto state 103
	Item           goto state 77
	ListItem       goto state 104

State 86

	Stmt -> Type Ident '(' . ListArg ')' Block          (rule 18)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 102
	Type           goto state 16

State 87

	Item -> Ident '=' . Expr                            (rule 29)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 101

State 88

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'do'           reduce using rule 49
	'downto'       reduce using rule 49
	'to'           reduce using rule 49
	'||'           reduce using rule 49


State 89

	Expr4 -> Expr4 . MulOp Expr5                        (rule 49)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 73
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 74
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 75
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'do'           reduce using rule 51
	'downto'       reduce using rule 51
	'to'           reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 72

State 90

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'do'           reduce using rule 55
	'downto'       reduce using rule 55
	'to'           reduce using rule 55
	'||'           reduce using rule 55


State 91

	Expr3 -> Expr3 . AddOp Expr4                        (rule 51)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 70
	','            reduce using rule 53
	'-'            shift, and enter state 71
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'do'           reduce using rule 53
	'downto'       reduce using rule 53
	'to'           reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 69

State 92

	Expr -> Expr1 '||' Expr .                           (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'do'           reduce using rule 57
	'downto'       reduce using rule 57
	'to'           reduce using rule 57


State 93

	Expr6 -> '(' Expr ')' .                             (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'do'           reduce using rule 45
	'downto'       reduce using rule 45
	'to'           reduce using rule 45
	'||'           reduce using rule 45


State 94

	Stmt -> 'for' Ident '=' . Expr 'to' Expr 'do' Stmt    (rule 25)
	Stmt -> 'for' Ident '=' . Expr 'downto' Expr 'do' Stmt    (rule 26)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 100

State 95

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 22)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 23)

	')'            shift, and enter state 99


State 96

	Stmt -> 'return' Expr ';' .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 97

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 24)

	')'            shift, and enter state 98


State 98

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 24)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	';'            shift, and enter state 40
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 41
	'for'          shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 8
	'return'       shift, and enter state 44
	'string'       shift, and enter state 9
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Block          goto state 27
	Stmt           goto state 113
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36

State 99

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 22)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 23)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	';'            shift, and enter state 40
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 41
	'for'          shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 8
	'return'       shift, and enter state 44
	'string'       shift, and enter state 9
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Block          goto state 27
	Stmt           goto state 112
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36

State 100

	Stmt -> 'for' Ident '=' Expr . 'to' Expr 'do' Stmt    (rule 25)
	Stmt -> 'for' Ident '=' Expr . 'downto' Expr 'do' Stmt    (rule 26)

	'downto'       shift, and enter state 110
	'to'           shift, and enter state 111


State 101

	Item -> Ident '=' Expr .                            (rule 29)

	','            reduce using rule 29
	';'            reduce using rule 29


State 102

	Stmt -> Type Ident '(' ListArg . ')' Block          (rule 18)

	')'            shift, and enter state 109


State 103

	Item -> Ident .                                     (rule 28)
	Item -> Ident . '=' Expr                            (rule 29)

	','            reduce using rule 28
	';'            reduce using rule 28
	'='            shift, and enter state 87


State 104

	ListItem -> Item ',' ListItem .                     (rule 31)

	';'            reduce using rule 31


State 105

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'do'           reduce using rule 43
	'downto'       reduce using rule 43
	'to'           reduce using rule 43
	'||'           reduce using rule 43


State 106

	ListExpr -> Expr ',' . ListExpr                     (rule 61)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	')'            reduce using rule 59
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 82
	ListExpr       goto state 108

State 107

	Stmt -> Ident '=' Expr ';' .                        (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 108

	ListExpr -> Expr ',' ListExpr .                     (rule 61)

	')'            reduce using rule 61


State 109

	Stmt -> Type Ident '(' ListArg ')' . Block          (rule 18)

	'{'            shift, and enter state 22

	Block          goto state 117

State 110

	Stmt -> 'for' Ident '=' Expr 'downto' . Expr 'do' Stmt    (rule 26)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 116

State 111

	Stmt -> 'for' Ident '=' Expr 'to' . Expr 'do' Stmt    (rule 25)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 41
	'true'         shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 25
	String         goto state 26
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 115

State 112

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 22)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 23)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         shift, and enter state 114
			(reduce using rule 22)

	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 113

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 114

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 23)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	';'            shift, and enter state 40
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 41
	'for'          shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 8
	'return'       shift, and enter state 44
	'string'       shift, and enter state 9
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Block          goto state 27
	Stmt           goto state 120
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36

State 115

	Stmt -> 'for' Ident '=' Expr 'to' Expr . 'do' Stmt    (rule 25)

	'do'           shift, and enter state 119


State 116

	Stmt -> 'for' Ident '=' Expr 'downto' Expr . 'do' Stmt    (rule 26)

	'do'           shift, and enter state 118


State 117

	Stmt -> Type Ident '(' ListArg ')' Block .          (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 118

	Stmt -> 'for' Ident '=' Expr 'downto' Expr 'do' . Stmt    (rule 26)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	';'            shift, and enter state 40
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 41
	'for'          shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 8
	'return'       shift, and enter state 44
	'string'       shift, and enter state 9
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Block          goto state 27
	Stmt           goto state 122
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36

State 119

	Stmt -> 'for' Ident '=' Expr 'to' Expr 'do' . Stmt    (rule 25)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	';'            shift, and enter state 40
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 41
	'for'          shift, and enter state 42
	'if'           shift, and enter state 43
	'int'          shift, and enter state 8
	'return'       shift, and enter state 44
	'string'       shift, and enter state 9
	'true'         shift, and enter state 45
	'void'         shift, and enter state 10
	'while'        shift, and enter state 46
	'{'            shift, and enter state 22
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 24
	Integer        goto state 25
	String         goto state 26
	Block          goto state 27
	Stmt           goto state 121
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36

State 120

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 121

	Stmt -> 'for' Ident '=' Expr 'to' Expr 'do' Stmt .    (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 122

	Stmt -> 'for' Ident '=' Expr 'downto' Expr 'do' Stmt .    (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 73
Number of terminals: 38
Number of non-terminals: 27
Number of states: 123
